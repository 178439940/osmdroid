<?xml version="1.0"?>
<javancss>
  <date>2016-12-18</date>
  <time>11:55:46</time>
  <packages>
    <package>
      <name>microsoft.mappoint</name>
      <classes>1</classes>
      <functions>13</functions>
      <ncss>95</ncss>
      <javadocs>11</javadocs>
      <javadoc_lines>115</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>11</multi_comment_lines>
    </package>
    <package>
      <name>org.metalev.multitouch.controller</name>
      <classes>1</classes>
      <functions>12</functions>
      <ncss>368</ncss>
      <javadocs>38</javadocs>
      <javadoc_lines>122</javadoc_lines>
      <single_comment_lines>83</single_comment_lines>
      <multi_comment_lines>85</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid</name>
      <classes>2</classes>
      <functions>12</functions>
      <ncss>59</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>3</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.api</name>
      <classes>4</classes>
      <functions>33</functions>
      <ncss>44</ncss>
      <javadocs>9</javadocs>
      <javadoc_lines>54</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>3</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.config</name>
      <classes>3</classes>
      <functions>79</functions>
      <ncss>223</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>145</javadoc_lines>
      <single_comment_lines>17</single_comment_lines>
      <multi_comment_lines>15</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.events</name>
      <classes>7</classes>
      <functions>20</functions>
      <ncss>91</ncss>
      <javadocs>3</javadocs>
      <javadoc_lines>14</javadoc_lines>
      <single_comment_lines>7</single_comment_lines>
      <multi_comment_lines>75</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider</name>
      <classes>12</classes>
      <functions>96</functions>
      <ncss>653</ncss>
      <javadocs>37</javadocs>
      <javadoc_lines>228</javadoc_lines>
      <single_comment_lines>57</single_comment_lines>
      <multi_comment_lines>6</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider.cachemanager</name>
      <classes>1</classes>
      <functions>21</functions>
      <ncss>428</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>145</javadoc_lines>
      <single_comment_lines>17</single_comment_lines>
      <multi_comment_lines>8</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider.constants</name>
      <classes>1</classes>
      <functions>3</functions>
      <ncss>29</ncss>
      <javadocs>3</javadocs>
      <javadoc_lines>21</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>42</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider.modules</name>
      <classes>21</classes>
      <functions>163</functions>
      <ncss>1449</ncss>
      <javadocs>56</javadocs>
      <javadoc_lines>337</javadoc_lines>
      <single_comment_lines>207</single_comment_lines>
      <multi_comment_lines>3</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider.tilesource</name>
      <classes>12</classes>
      <functions>83</functions>
      <ncss>415</ncss>
      <javadocs>43</javadocs>
      <javadoc_lines>252</javadoc_lines>
      <single_comment_lines>35</single_comment_lines>
      <multi_comment_lines>3</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.tileprovider.util</name>
      <classes>7</classes>
      <functions>25</functions>
      <ncss>397</ncss>
      <javadocs>19</javadocs>
      <javadoc_lines>92</javadoc_lines>
      <single_comment_lines>52</single_comment_lines>
      <multi_comment_lines>8</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.util</name>
      <classes>12</classes>
      <functions>138</functions>
      <ncss>963</ncss>
      <javadocs>35</javadocs>
      <javadoc_lines>160</javadoc_lines>
      <single_comment_lines>173</single_comment_lines>
      <multi_comment_lines>83</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.util.constants</name>
      <classes>2</classes>
      <functions>0</functions>
      <ncss>11</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>12</single_comment_lines>
      <multi_comment_lines>5</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views</name>
      <classes>3</classes>
      <functions>138</functions>
      <ncss>1167</ncss>
      <javadocs>46</javadocs>
      <javadoc_lines>274</javadoc_lines>
      <single_comment_lines>147</single_comment_lines>
      <multi_comment_lines>49</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.drawing</name>
      <classes>2</classes>
      <functions>5</functions>
      <ncss>42</ncss>
      <javadocs>2</javadocs>
      <javadoc_lines>14</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay</name>
      <classes>22</classes>
      <functions>406</functions>
      <ncss>2651</ncss>
      <javadocs>152</javadocs>
      <javadoc_lines>843</javadoc_lines>
      <single_comment_lines>361</single_comment_lines>
      <multi_comment_lines>202</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.compass</name>
      <classes>4</classes>
      <functions>37</functions>
      <ncss>280</ncss>
      <javadocs>6</javadocs>
      <javadoc_lines>36</javadoc_lines>
      <single_comment_lines>45</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.gestures</name>
      <classes>2</classes>
      <functions>14</functions>
      <ncss>89</ncss>
      <javadocs>1</javadocs>
      <javadoc_lines>1</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.gridlines</name>
      <classes>1</classes>
      <functions>5</functions>
      <ncss>267</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>27</javadoc_lines>
      <single_comment_lines>19</single_comment_lines>
      <multi_comment_lines>42</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.infowindow</name>
      <classes>3</classes>
      <functions>19</functions>
      <ncss>137</ncss>
      <javadocs>12</javadocs>
      <javadoc_lines>86</javadoc_lines>
      <single_comment_lines>13</single_comment_lines>
      <multi_comment_lines>29</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.mylocation</name>
      <classes>6</classes>
      <functions>72</functions>
      <ncss>489</ncss>
      <javadocs>27</javadocs>
      <javadoc_lines>128</javadoc_lines>
      <single_comment_lines>108</single_comment_lines>
      <multi_comment_lines>14</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.overlay.simplefastpoint</name>
      <classes>4</classes>
      <functions>44</functions>
      <ncss>366</ncss>
      <javadocs>22</javadocs>
      <javadoc_lines>129</javadoc_lines>
      <single_comment_lines>22</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.util</name>
      <classes>3</classes>
      <functions>12</functions>
      <ncss>87</ncss>
      <javadocs>10</javadocs>
      <javadoc_lines>78</javadoc_lines>
      <single_comment_lines>46</single_comment_lines>
      <multi_comment_lines>4</multi_comment_lines>
    </package>
    <package>
      <name>org.osmdroid.views.util.constants</name>
      <classes>3</classes>
      <functions>0</functions>
      <ncss>25</ncss>
      <javadocs>3</javadocs>
      <javadoc_lines>15</javadoc_lines>
      <single_comment_lines>14</single_comment_lines>
      <multi_comment_lines>1</multi_comment_lines>
    </package>
    <total>
      <classes>139</classes>
      <functions>1450</functions>
      <ncss>10825</ncss>
      <javadocs>587</javadocs>
      <javadoc_lines>3316</javadoc_lines>
      <single_comment_lines>1438</single_comment_lines>
      <multi_comment_lines>691</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>25.00</td><td>139.00</td><td>1,450.00</td><td>10,825.00</td><td>587.00</td><td>Project</td></tr>
      <tr><td></td><td>5.56</td><td>58.00</td><td>433.00</td><td>23.48</td><td>Package</td></tr>
      <tr><td></td><td></td><td>10.43</td><td>77.88</td><td>4.22</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>7.47</td><td>0.40</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>microsoft.mappoint.TileSystem</name>
      <ncss>92</ncss>
      <functions>13</functions>
      <classes>0</classes>
      <javadocs>11</javadocs>
      <javadocs_lines>115</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.metalev.multitouch.controller.MultiTouchController</name>
      <ncss>363</ncss>
      <functions>12</functions>
      <classes>3</classes>
      <javadocs>38</javadocs>
      <javadocs_lines>122</javadocs_lines>
      <single_comment_lines>83</single_comment_lines>
      <implementation_comment_lines>20</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.LocationListenerProxy</name>
      <ncss>28</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.SensorEventListenerProxy</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.api.IGeoPoint</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.api.IMapController</name>
      <ncss>15</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>7</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.api.IMapView</name>
      <ncss>12</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>7</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.api.IProjection</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>37</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.config.Configuration</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>20</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.config.DefaultConfigurationProvider</name>
      <ncss>155</ncss>
      <functions>39</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>15</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.config.IConfigurationProvider</name>
      <ncss>39</ncss>
      <functions>38</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
      <javadocs_lines>113</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.DelayedMapListener</name>
      <ncss>36</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>1</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>15</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.MapAdapter</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.MapEvent</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.MapEventsReceiver</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.MapListener</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>6</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.ScrollEvent</name>
      <ncss>16</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>9</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.events.ZoomEvent</name>
      <ncss>12</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>6</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.BitmapPool</name>
      <ncss>46</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable</name>
      <ncss>23</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.IMapTileProviderCallback</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.IRegisterReceiver</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.LRUMapTileCache</name>
      <ncss>40</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTile</name>
      <ncss>38</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTileCache</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>9</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTileProviderArray</name>
      <ncss>111</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>34</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTileProviderBase</name>
      <ncss>191</ncss>
      <functions>23</functions>
      <classes>3</classes>
      <javadocs>17</javadocs>
      <javadocs_lines>106</javadocs_lines>
      <single_comment_lines>14</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>27</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.MapTileRequestState</name>
      <ncss>21</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable</name>
      <ncss>22</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>10</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager</name>
      <ncss>392</ncss>
      <functions>21</functions>
      <classes>4</classes>
      <javadocs>24</javadocs>
      <javadocs_lines>145</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>8</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants</name>
      <ncss>20</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>21</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>42</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.ArchiveFileFactory</name>
      <ncss>29</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>17</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>4</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive</name>
      <ncss>54</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>6</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive</name>
      <ncss>22</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.IArchiveFile</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.IFilesystemCache</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>38</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.INetworkAvailablityCheck</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive</name>
      <ncss>34</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>6</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider</name>
      <ncss>44</ncss>
      <functions>10</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader</name>
      <ncss>116</ncss>
      <functions>13</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>9</javadocs_lines>
      <single_comment_lines>30</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider</name>
      <ncss>90</ncss>
      <functions>14</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>23</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider</name>
      <ncss>58</ncss>
      <functions>11</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>24</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase</name>
      <ncss>122</ncss>
      <functions>12</functions>
      <classes>3</classes>
      <javadocs>15</javadocs>
      <javadocs_lines>75</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider</name>
      <ncss>98</ncss>
      <functions>13</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>25</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck</name>
      <ncss>29</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.OfflineTileProvider</name>
      <ncss>21</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>10</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter</name>
      <ncss>200</ncss>
      <functions>10</functions>
      <classes>1</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>62</javadocs_lines>
      <single_comment_lines>30</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter</name>
      <ncss>55</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>10</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.TileWriter</name>
      <ncss>113</ncss>
      <functions>11</functions>
      <classes>2</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>26</javadocs_lines>
      <single_comment_lines>28</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive</name>
      <ncss>33</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase</name>
      <ncss>86</ncss>
      <functions>11</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>8</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource</name>
      <ncss>23</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.FileBasedTileSource</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource</name>
      <ncss>69</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>45</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.IStyledTileSource</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource</name>
      <ncss>9</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>48</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource</name>
      <ncss>48</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>45</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource</name>
      <ncss>46</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>42</javadocs_lines>
      <single_comment_lines>4</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.QuadTreeTileSource</name>
      <ncss>16</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>7</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory</name>
      <ncss>45</ncss>
      <functions>5</functions>
      <classes>2</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>31</javadocs_lines>
      <single_comment_lines>6</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.tilesource.XYTileSource</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.CloudmadeUtil</name>
      <ncss>60</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>27</javadocs_lines>
      <single_comment_lines>6</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.Counters</name>
      <ncss>22</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.ManifestUtil</name>
      <ncss>15</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>6</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.SimpleInvalidationHandler</name>
      <ncss>13</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>4</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.SimpleRegisterReceiver</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.StorageUtils</name>
      <ncss>200</ncss>
      <functions>8</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>22</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.tileprovider.util.StreamUtils</name>
      <ncss>16</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>22</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.BoundingBox</name>
      <ncss>113</ncss>
      <functions>24</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>17</javadocs_lines>
      <single_comment_lines>24</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.BoundingBoxE6</name>
      <ncss>122</ncss>
      <functions>23</functions>
      <classes>1</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>31</javadocs_lines>
      <single_comment_lines>25</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.GEMFFile</name>
      <ncss>285</ncss>
      <functions>12</functions>
      <classes>2</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>9</javadocs_lines>
      <single_comment_lines>64</single_comment_lines>
      <implementation_comment_lines>71</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.GeoPoint</name>
      <ncss>136</ncss>
      <functions>32</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>20</javadocs_lines>
      <single_comment_lines>27</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.GeometryMath</name>
      <ncss>35</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.LocationUtils</name>
      <ncss>23</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>8</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.MyMath</name>
      <ncss>12</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>8</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.NetworkLocationIgnorer</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>19</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.TileLooper</name>
      <ncss>19</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.TileSystem</name>
      <ncss>34</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>37</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.constants.GeoConstants</name>
      <ncss>6</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.constants.UtilConstants</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.MapController</name>
      <ncss>274</ncss>
      <functions>20</functions>
      <classes>4</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>25</javadocs_lines>
      <single_comment_lines>50</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.MapView</name>
      <ncss>675</ncss>
      <functions>93</functions>
      <classes>5</classes>
      <javadocs>29</javadocs>
      <javadocs_lines>175</javadocs_lines>
      <single_comment_lines>89</single_comment_lines>
      <implementation_comment_lines>44</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.Projection</name>
      <ncss>127</ncss>
      <functions>25</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>74</javadocs_lines>
      <single_comment_lines>6</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.drawing.OsmBitmapShader</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.drawing.OsmPath</name>
      <ncss>18</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay</name>
      <ncss>44</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>30</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager</name>
      <ncss>161</ncss>
      <functions>30</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>6</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.FolderOverlay</name>
      <ncss>59</ncss>
      <functions>16</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>16</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.IconOverlay</name>
      <ncss>43</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay</name>
      <ncss>91</ncss>
      <functions>21</functions>
      <classes>4</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>16</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ItemizedOverlay</name>
      <ncss>141</ncss>
      <functions>18</functions>
      <classes>1</classes>
      <javadocs>14</javadocs>
      <javadocs_lines>93</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>32</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView</name>
      <ncss>51</ncss>
      <functions>6</functions>
      <classes>5</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus</name>
      <ncss>153</ncss>
      <functions>21</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>29</javadocs_lines>
      <single_comment_lines>26</single_comment_lines>
      <implementation_comment_lines>22</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.MapEventsOverlay</name>
      <ncss>16</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>11</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.Marker</name>
      <ncss>233</ncss>
      <functions>39</functions>
      <classes>2</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>49</javadocs_lines>
      <single_comment_lines>8</single_comment_lines>
      <implementation_comment_lines>19</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.MinimapOverlay</name>
      <ncss>88</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
      <javadocs_lines>79</javadocs_lines>
      <single_comment_lines>25</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay</name>
      <ncss>46</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>24</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.Overlay</name>
      <ncss>54</ncss>
      <functions>22</functions>
      <classes>1</classes>
      <javadocs>22</javadocs>
      <javadocs_lines>136</javadocs_lines>
      <single_comment_lines>22</single_comment_lines>
      <implementation_comment_lines>7</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.OverlayItem</name>
      <ncss>54</ncss>
      <functions>14</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>17</javadocs_lines>
      <single_comment_lines>23</single_comment_lines>
      <implementation_comment_lines>23</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.OverlayManager</name>
      <ncss>30</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.OverlayWithIW</name>
      <ncss>39</ncss>
      <functions>15</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>26</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.PathOverlay</name>
      <ncss>108</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>6</javadocs>
      <javadocs_lines>37</javadocs_lines>
      <single_comment_lines>29</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.Polygon</name>
      <ncss>168</ncss>
      <functions>23</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
      <javadocs_lines>50</javadocs_lines>
      <single_comment_lines>19</single_comment_lines>
      <implementation_comment_lines>3</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.Polyline</name>
      <ncss>266</ncss>
      <functions>31</functions>
      <classes>1</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>40</javadocs_lines>
      <single_comment_lines>54</single_comment_lines>
      <implementation_comment_lines>2</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay</name>
      <ncss>337</ncss>
      <functions>28</functions>
      <classes>1</classes>
      <javadocs>17</javadocs>
      <javadocs_lines>100</javadocs_lines>
      <single_comment_lines>66</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.TilesOverlay</name>
      <ncss>192</ncss>
      <functions>24</functions>
      <classes>1</classes>
      <javadocs>9</javadocs>
      <javadocs_lines>60</javadocs_lines>
      <single_comment_lines>17</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay</name>
      <ncss>215</ncss>
      <functions>25</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>28</javadocs_lines>
      <single_comment_lines>37</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.compass.IOrientationConsumer</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.compass.IOrientationProvider</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider</name>
      <ncss>28</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>7</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureDetector</name>
      <ncss>21</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay</name>
      <ncss>57</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>1</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay</name>
      <ncss>255</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
      <javadocs_lines>27</javadocs_lines>
      <single_comment_lines>19</single_comment_lines>
      <implementation_comment_lines>42</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow</name>
      <ncss>39</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>13</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>5</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow</name>
      <ncss>51</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>8</javadocs>
      <javadocs_lines>45</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.infowindow.MarkerInfoWindow</name>
      <ncss>19</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>28</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay</name>
      <ncss>64</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>14</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>7</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider</name>
      <ncss>59</ncss>
      <functions>16</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>35</javadocs_lines>
      <single_comment_lines>10</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationConsumer</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationProvider</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay</name>
      <ncss>265</ncss>
      <functions>35</functions>
      <classes>1</classes>
      <javadocs>13</javadocs>
      <javadocs_lines>68</javadocs_lines>
      <single_comment_lines>51</single_comment_lines>
      <implementation_comment_lines>7</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay</name>
      <ncss>24</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>8</javadocs_lines>
      <single_comment_lines>24</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint</name>
      <ncss>39</ncss>
      <functions>14</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>4</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay</name>
      <ncss>224</ncss>
      <functions>11</functions>
      <classes>3</classes>
      <javadocs>5</javadocs>
      <javadocs_lines>31</javadocs_lines>
      <single_comment_lines>18</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions</name>
      <ncss>67</ncss>
      <functions>14</functions>
      <classes>3</classes>
      <javadocs>14</javadocs>
      <javadocs_lines>82</javadocs_lines>
      <single_comment_lines>1</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
      <javadocs_lines>12</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.Mercator</name>
      <ncss>21</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
      <javadocs_lines>54</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.MyMath</name>
      <ncss>12</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
      <javadocs_lines>24</javadocs_lines>
      <single_comment_lines>21</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.PathProjection</name>
      <ncss>37</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>2</single_comment_lines>
      <implementation_comment_lines>4</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.constants.MapViewConstants</name>
      <ncss>11</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>7</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>1</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.constants.MathConstants</name>
      <ncss>6</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>5</javadocs_lines>
      <single_comment_lines>6</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.views.util.constants.OverlayConstants</name>
      <ncss>4</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>3</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.BoundBoxTest</name>
      <ncss>37</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
      <javadocs_lines>3</javadocs_lines>
      <single_comment_lines>0</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <object>
      <name>org.osmdroid.util.GeoPointTest</name>
      <ncss>65</ncss>
      <functions>15</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
      <javadocs_lines>0</javadocs_lines>
      <single_comment_lines>5</single_comment_lines>
      <implementation_comment_lines>0</implementation_comment_lines>
    </object>
    <averages>
      <ncss>69.11</ncss>
      <functions>10.43</functions>
      <classes>0.51</classes>
      <javadocs>4.22</javadocs>
      <javadocs_lines>23.86</javadocs_lines>
      <single_comment_lines>10.17</single_comment_lines>
      <implementation_comment_lines>3.31</implementation_comment_lines>
    </averages>
    <ncss>10,825.00</ncss>
  </objects>

  <functions>
    <function>
      <name>microsoft.mappoint.TileSystem.setTileSize(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.getTileSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.getMaximumZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.Clip(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.MapSize(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.GroundResolution(double,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.MapScale(double,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.LatLongToPixelXY(double,double,int,Point)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.PixelXYToLatLong(int,int,int,GeoPoint)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.PixelXYToTileXY(int,int,Point)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.TileXYToPixelXY(int,int,Point)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.TileXYToQuadKey(int,int,int)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>microsoft.mappoint.TileSystem.QuadKeyToTileXY(String,Point)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.extractCurrPtInfo()</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchController(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchController(T,boolean)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.setHandleSingleTouchEvents(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.getHandleSingleTouchEvents()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.onTouchEvent(MotionEvent)</name>
      <ncss>35</ncss>
      <ccn>29</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.decodeTouchEvent(int,int[],int[][],int[][][],int[][][][],int,boolean,long)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.anchorAtThisPositionAndScale()</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.performDragOrPinch()</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.isPinching()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.multiTouchController()</name>
      <ncss>58</ncss>
      <ccn>22</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.getMode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.set(int,int[],int[][],int[][][],int[][][][],int,boolean,long)</name>
      <ncss>25</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.set(PointInfo)</name>
      <ncss>22</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.isMultiTouch()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getMultiTouchWidth()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getMultiTouchHeight()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.julery_isqrt(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getMultiTouchDiameterSq()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getMultiTouchDiameter()</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getMultiTouchAngle()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getNumTouchPoints()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getXs()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getYs()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getPointerIds()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getPressure()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getPressures()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.isDown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getAction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PointInfo.getEventTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set(float,float,boolean,float,boolean,float,float,boolean,float)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set(float,float,float,float,float,float)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getXOff()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getYOff()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getScale()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getScaleX()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getScaleY()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getAngle()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchObjectCanvas.getDraggableObjectAtPoint(PointInfo)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchObjectCanvas.getPositionAndScale(T,PositionAndScale)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchObjectCanvas.setPositionAndScale(T,PositionAndScale,PointInfo)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.metalev.multitouch.controller.MultiTouchController.MultiTouchObjectCanvas.selectObject(T,PointInfo)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.LocationListenerProxy(LocationManager)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.startListening(LocationListener,long,float)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.stopListening()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.onLocationChanged(Location)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.onProviderDisabled(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.onProviderEnabled(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.LocationListenerProxy.onStatusChanged(String,int,Bundle)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.SensorEventListenerProxy.SensorEventListenerProxy(SensorManager)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.SensorEventListenerProxy.startListening(SensorEventListener,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.SensorEventListenerProxy.stopListening()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.SensorEventListenerProxy.onAccuracyChanged(Sensor,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.SensorEventListenerProxy.onSensorChanged(SensorEvent)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IGeoPoint.getLatitudeE6()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IGeoPoint.getLongitudeE6()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IGeoPoint.getLatitude()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IGeoPoint.getLongitude()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.animateTo(IGeoPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.scrollBy(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.setCenter(IGeoPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.setZoom(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.stopAnimation(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.stopPanning()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomIn()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomInFixing(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomOut()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomOutFixing(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomTo(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomToFixing(int,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomToSpan(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapController.zoomToSpan(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getController()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getProjection()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getMaxZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getLatitudeSpan()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getLongitudeSpan()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getLatitudeSpanDouble()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getLongitudeSpanDouble()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.getMapCenter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IMapView.setBackgroundColor(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IProjection.toPixels(IGeoPoint,Point)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IProjection.fromPixels(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IProjection.metersToEquatorPixels(float)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IProjection.getNorthEast()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.api.IProjection.getSouthWest()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.Configuration.getInstance()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.Configuration.setConfigurationProvider(IConfigurationProvider)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.DefaultConfigurationProvider()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getGpsWaitTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setGpsWaitTime(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.isDebugMode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setDebugMode(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.isDebugMapView()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setDebugMapView(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.isDebugTileProviders()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setDebugTileProviders(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.isDebugMapTileDownloader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setDebugMapTileDownloader(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.isMapViewHardwareAccelerated()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setMapViewHardwareAccelerated(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getUserAgentValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setUserAgentValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getCacheMapTileCount()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setCacheMapTileCount(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileDownloadThreads()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileDownloadThreads(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileFileSystemThreads()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileFileSystemThreads(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileDownloadMaxQueueSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileDownloadMaxQueueSize(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileFileSystemMaxQueueSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileFileSystemMaxQueueSize(short)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileFileSystemCacheMaxBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileFileSystemCacheMaxBytes(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getTileFileSystemCacheTrimBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setTileFileSystemCacheTrimBytes(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getHttpHeaderDateTimeFormat()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setHttpHeaderDateTimeFormat(SimpleDateFormat)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getOsmdroidBasePath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setOsmdroidBasePath(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getOsmdroidTileCache()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setOsmdroidTileCache(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.getUserAgentHttpHeader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.setUserAgentHttpHeader(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.load(Context,SharedPreferences)</name>
      <ncss>43</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.DefaultConfigurationProvider.save(Context,SharedPreferences)</name>
      <ncss>17</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getGpsWaitTime()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setGpsWaitTime(long)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.isDebugMode()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setDebugMode(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.isDebugMapView()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setDebugMapView(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.isDebugTileProviders()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setDebugTileProviders(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.isDebugMapTileDownloader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setDebugMapTileDownloader(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.isMapViewHardwareAccelerated()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setMapViewHardwareAccelerated(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getUserAgentValue()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setUserAgentValue(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getCacheMapTileCount()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setCacheMapTileCount(short)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileDownloadThreads()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileDownloadThreads(short)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileFileSystemThreads()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileFileSystemThreads(short)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileDownloadMaxQueueSize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileDownloadMaxQueueSize(short)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileFileSystemMaxQueueSize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileFileSystemMaxQueueSize(short)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheMaxBytes()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileFileSystemCacheMaxBytes(long)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheTrimBytes()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setTileFileSystemCacheTrimBytes(long)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getHttpHeaderDateTimeFormat()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setHttpHeaderDateTimeFormat(SimpleDateFormat)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getOsmdroidBasePath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setOsmdroidBasePath(File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getOsmdroidTileCache()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setOsmdroidTileCache(File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.getUserAgentHttpHeader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.setUserAgentHttpHeader(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.load(Context,SharedPreferences)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.config.IConfigurationProvider.save(Context,SharedPreferences)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.DelayedMapListener(MapListener,long)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.DelayedMapListener(MapListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.onScroll(ScrollEvent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.onZoom(ZoomEvent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.dispatch(MapEvent)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.CallbackTask.CallbackTask(MapEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.DelayedMapListener.CallbackTask.run()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapAdapter.onScroll(ScrollEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapAdapter.onZoom(ZoomEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapEventsReceiver.singleTapConfirmedHelper(GeoPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapEventsReceiver.longPressHelper(GeoPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapListener.onScroll(ScrollEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.MapListener.onZoom(ZoomEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ScrollEvent.ScrollEvent(MapView,int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ScrollEvent.getSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ScrollEvent.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ScrollEvent.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ScrollEvent.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ZoomEvent.ZoomEvent(MapView,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ZoomEvent.getSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ZoomEvent.getZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.events.ZoomEvent.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.getInstance()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.returnDrawableToPool(ReusableBitmapDrawable)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.applyReusableOptions(BitmapFactory.Options)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.obtainBitmapFromPool()</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.obtainSizedBitmapFromPool(int,int)</name>
      <ncss>14</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.BitmapPool.clearBitmapPool()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.ExpirableBitmapDrawable(Bitmap)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.getState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.isStateful()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(boolean[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.isDrawableExpired(Drawable)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ExpirableBitmapDrawable.setDrawableExpired(Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IMapTileProviderCallback.mapTileRequestCompleted(MapTileRequestState,Drawable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IMapTileProviderCallback.mapTileRequestFailed(MapTileRequestState)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IMapTileProviderCallback.mapTileRequestExpiredTile(MapTileRequestState,Drawable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IMapTileProviderCallback.useDataConnection()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IRegisterReceiver.registerReceiver(BroadcastReceiver,IntentFilter)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IRegisterReceiver.unregisterReceiver(BroadcastReceiver)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.IRegisterReceiver.destroy()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.TileRemovedListener.onTileRemoved(MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.LRUMapTileCache(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.ensureCapacity(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.remove(Object)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.clear()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.removeEldestEntry(Drawable)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.getTileRemovedListener()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.LRUMapTileCache.setTileRemovedListener(TileRemovedListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.MapTile(int,int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.getExpires()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.setExpires(Date)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.getZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTile.hashCode()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.MapTileCache()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.MapTileCache(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.ensureCapacity(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.getMapTile(MapTile)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.putTile(MapTile,Drawable)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.containsTile(MapTile)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileCache.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.MapTileProviderArray(ITileSource,IRegisterReceiver)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.MapTileProviderArray(ITileSource,IRegisterReceiver,MapTileModuleProviderBase[])</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.detach()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getMapTile(MapTile)</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.mapTileRequestCompleted(MapTileRequestState,Drawable)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.mapTileRequestFailed(MapTileRequestState)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.mapTileRequestExpiredTile(MapTileRequestState,Drawable)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getTileWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getQueueSize()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.findNextAppropriateProvider(MapTileRequestState)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getProviderExists(MapTileModuleProviderBase)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getMinimumZoomLevel()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.getMaximumZoomLevel()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderArray.setTileSource(ITileSource)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getMapTile(MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.detach()</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getMinimumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getMaximumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.setTileSource(ITileSource)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getTileSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.createTileCache()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.MapTileProviderBase(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.MapTileProviderBase(ITileSource,Handler)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.setTileLoadFailureImage(Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.mapTileRequestCompleted(MapTileRequestState,Drawable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.mapTileRequestFailed(MapTileRequestState)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.mapTileRequestExpiredTile(MapTileRequestState,Drawable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache(MapTileRequestState,Drawable)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.putExpiredTileIntoCache(MapTileRequestState,Drawable)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.setTileRequestCompleteHandler(Handler)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ensureCapacity(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.clearTileCache()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.useDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.setUseDataConnection(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.rescaleCache(Projection,int,int,Rect)</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.ScaleTileLooper(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.initialiseLoop(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.handleTile(Canvas,int,MapTile,int,int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.finaliseLoop()</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.handleTile(int,MapTile,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper.ZoomInTileLooper(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper.handleTile(int,MapTile,int,int)</name>
      <ncss>31</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ZoomOutTileLooper.ZoomOutTileLooper(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.ZoomOutTileLooper.handleTile(int,MapTile,int,int)</name>
      <ncss>31</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getTileWriter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBase.getQueueSize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.MapTileProviderBasic(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.MapTileProviderBasic(Context,ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.MapTileProviderBasic(Context,ITileSource,IFilesystemCache)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.MapTileProviderBasic(IRegisterReceiver,INetworkAvailablityCheck,ITileSource,Context,IFilesystemCache)</name>
      <ncss>21</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.getTileWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileProviderBasic.detach()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.MapTileRequestState(MapTile,MapTileModuleProviderBase[],IMapTileProviderCallback)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.getMapTile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.getCallback()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.getNextProvider()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.MapTileRequestState.getCurrentProvider()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable.ReusableBitmapDrawable(Bitmap)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable.beginUsingDrawable()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable.finishUsingDrawable()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable.tryRecycle()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.ReusableBitmapDrawable.isBitmapValid()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManager(MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManager(MapView,IFilesystemCache)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.getMapTileFromCoordinates(double,double,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.getCoordinatesFromMapTile(int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.getFileName(ITileSource,MapTile)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.loadTile(OnlineTileSourceBase,MapTile)</name>
      <ncss>39</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.possibleTilesInArea(BoundingBox,int,int)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.possibleTilesCovered(GeoPoint,int,int)</name>
      <ncss>51</ncss>
      <ccn>22</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.zoomMessage(int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsync(Context,BoundingBox,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsync(Context,GeoPoint,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsync(Context,BoundingBox,int,int,CacheManagerCallback)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsync(Context,GeoPoint,int,int,CacheManagerCallback)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsyncNoUI(Context,GeoPoint,int,int,CacheManagerCallback)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.downloadAreaAsyncNoUI(Context,BoundingBox,int,int,CacheManagerCallback)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback.onTaskComplete()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback.updateProgress(int,int,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback.downloadStarted()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback.setPossibleTilesInArea(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback.onTaskFailed(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.CacheManagerTask(Context,BoundingBox,int,int,CacheManagerCallback,boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.CacheManagerTask(Context,GeoPoint,int,int,CacheManagerCallback,boolean)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.CacheManagerTask(Context,GeoPoint,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.CacheManagerTask(Context,BoundingBox,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.onPreExecute()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.OnCancelListener$1.onCancel(DialogInterface)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.createProgressDialog(Context)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.onProgressUpdate(Integer)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.DownloadingTask(Context,BoundingBox,int,int,CacheManagerCallback,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.DownloadingTask(Context,GeoPoint,int,int,CacheManagerCallback,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.onPreExecute()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.onPostExecute(Integer)</name>
      <ncss>13</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.doInBackground(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.DownloadingTask.downloadArea()</name>
      <ncss>94</ncss>
      <ccn>41</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.cleanAreaAsync(Context,BoundingBox,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.cleanAreaAsync(Context,GeoPoint,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.extendedBoundsFromGeoPoints(GeoPoint,int)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask.CleaningTask(Context,BoundingBox,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask.onPreExecute()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask.onPostExecute(Integer)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask.doInBackground(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.CleaningTask.cleanArea()</name>
      <ncss>22</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.currentCacheUsage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.cacheCapacity()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.cachemanager.CacheManager.directorySize(File)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.getBasePath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.getUserAgentValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.constants.OpenStreetMapTileProviderConstants.setUserAgentValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ArchiveFileFactory.isFileExtensionRegistered(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ArchiveFileFactory.registerArchiveFileProvider(IArchiveFile,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ArchiveFileFactory.getArchiveFile(File)</name>
      <ncss>17</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory.ConfigurablePriorityThreadFactory(int,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory.newThread(Runnable)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.DatabaseFileArchive()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.DatabaseFileArchive(SQLiteDatabase)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.getDatabaseFileArchive(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.getTileSources()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.init(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage(ITileSource,MapTile)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.getInputStream(ITileSource,MapTile)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.DatabaseFileArchive.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.GEMFFileArchive()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.GEMFFileArchive(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.getGEMFFileArchive(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.init(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.getInputStream(ITileSource,MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.getTileSources()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.close()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.GEMFFileArchive.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IArchiveFile.init(File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IArchiveFile.getInputStream(ITileSource,MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IArchiveFile.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IArchiveFile.getTileSources()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IFilesystemCache.saveFile(ITileSource,MapTile,InputStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IFilesystemCache.exists(ITileSource,MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IFilesystemCache.onDetach()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.IFilesystemCache.remove(ITileSource,MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.INetworkAvailablityCheck.getNetworkAvailable()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.INetworkAvailablityCheck.getWiFiNetworkAvailable()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.INetworkAvailablityCheck.getCellularDataNetworkAvailable()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.INetworkAvailablityCheck.getRouteToPathExists(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.MBTilesFileArchive()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.MBTilesFileArchive(SQLiteDatabase)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.getDatabaseFileArchive(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.init(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.getInputStream(ITileSource,MapTile)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.getTileSources()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MBTilesFileArchive.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.MapTileAssetsProvider(IRegisterReceiver,AssetManager)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.MapTileAssetsProvider(IRegisterReceiver,AssetManager,ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.MapTileAssetsProvider(IRegisterReceiver,AssetManager,ITileSource,int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getUsesDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getThreadGroupName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getTileLoader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getMinimumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.getMaximumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.setTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.TileLoader.TileLoader(AssetManager)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileAssetsProvider.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>13</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.MapTileDownloader(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.MapTileDownloader(ITileSource,IFilesystemCache)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.MapTileDownloader(ITileSource,IFilesystemCache,INetworkAvailablityCheck)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.MapTileDownloader(ITileSource,IFilesystemCache,INetworkAvailablityCheck,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getTileSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getUsesDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getThreadGroupName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getTileLoader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.detach()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getMinimumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.getMaximumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.setTileSource(ITileSource)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>70</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileDownloader.TileLoader.tileLoaded(MapTileRequestState,Drawable)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.MapTileFileArchiveProvider(IRegisterReceiver,ITileSource,IArchiveFile[])</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.MapTileFileArchiveProvider(IRegisterReceiver,ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getUsesDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getThreadGroupName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getTileLoader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getMinimumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getMaximumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.onMediaMounted()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.onMediaUnmounted()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.setTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.detach()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles()</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getInputStream(MapTile,ITileSource)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>24</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.MapTileFileStorageProviderBase(IRegisterReceiver,int,int)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.checkSdCard()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.isSdCardAvailable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.detach()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.onMediaMounted()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.onMediaUnmounted()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.MyBroadcastReceiver.onReceive(Context,Intent)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.MapTileFilesystemProvider(IRegisterReceiver)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.MapTileFilesystemProvider(IRegisterReceiver,ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.MapTileFilesystemProvider(IRegisterReceiver,ITileSource,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.MapTileFilesystemProvider(IRegisterReceiver,ITileSource,long,int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getUsesDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getThreadGroupName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getTileLoader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getMinimumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.getMaximumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.setTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>28</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getThreadGroupName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getTileLoader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getUsesDataConnection()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getMinimumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getMaximumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.setTileSource(ITileSource)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.LinkedHashMap$1.removeEldestEntry(MapTileRequestState)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.MapTileModuleProviderBase(int,int)</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.loadMapTileAsync(MapTileRequestState)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.clearQueue()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.detach()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.removeTileFromQueues(MapTile)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.onTileLoaderInit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.onTileLoaderShutdown()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.nextTile()</name>
      <ncss>15</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoaded(MapTileRequestState,Drawable)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedExpired(MapTileRequestState,Drawable)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedFailed(MapTileRequestState)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.run()</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.CantContinueException.CantContinueException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.CantContinueException.CantContinueException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.MapTileSqlCacheProvider(IRegisterReceiver,ITileSource,long)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.MapTileSqlCacheProvider(IRegisterReceiver,ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getUsesDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getThreadGroupName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getTileLoader()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getMinimumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.getMaximumZoomLevel()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.onMediaMounted()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.onMediaUnmounted()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.setTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.detach()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.hasTile(MapTile)</name>
      <ncss>13</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader.loadTile(MapTileRequestState)</name>
      <ncss>45</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.NetworkAvailabliltyCheck(Context)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getNetworkAvailable()</name>
      <ncss>9</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getWiFiNetworkAvailable()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getCellularDataNetworkAvailable()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getRouteToPathExists(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.OfflineTileProvider.OfflineTileProvider(IRegisterReceiver,File[])</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.OfflineTileProvider.getArchives()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.OfflineTileProvider.detach()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.Thread$1.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.SqlTileWriter()</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation()</name>
      <ncss>21</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.saveFile(ITileSource,MapTile,InputStream)</name>
      <ncss>34</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.exists(String,MapTile)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.exists(ITileSource,MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.onDetach()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.purgeCache()</name>
      <ncss>7</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.importFromFileCache(boolean)</name>
      <ncss>68</ncss>
      <ccn>32</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.remove(ITileSource,MapTile)</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount(String)</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.SqliteArchiveTileWriter(String)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.saveFile(ITileSource,MapTile,InputStream)</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.exists(ITileSource,MapTile)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.onDetach()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.remove(ITileSource,MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.Thread$1.run()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.TileWriter()</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.getUsedCacheSpace()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.saveFile(ITileSource,MapTile,InputStream)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.onDetach()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.remove(ITileSource,MapTile)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.exists(ITileSource,MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.createFolderAndCheckIfExists(File)</name>
      <ncss>15</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.calculateDirectorySize(File)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.isSymbolicDirectoryLink(File,File)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.getDirectoryFileList(File)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.Comparator$1.compare(File,File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.ZipFileArchive()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.ZipFileArchive(ZipFile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.getZipFileArchive(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.init(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.getInputStream(ITileSource,MapTile)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.getTileSources()</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.close()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.modules.ZipFileArchive.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.BitmapTileSourceBase(String,int,int,int,String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.ordinal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.name()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.pathBase()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.imageFilenameEnding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getMinimumZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getMaximumZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getTileSizePixels()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable(String)</name>
      <ncss>28</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getTileRelativeFilenameString(MapTile)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable(InputStream)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.LowMemoryException.LowMemoryException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.LowMemoryException.LowMemoryException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.CloudmadeTileSource(String,int,int,int,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.pathBase()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.getTileURLString(MapTile)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.setStyle(Integer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.setStyle(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.getStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.FileBasedTileSource.FileBasedTileSource(String,int,int,int,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.FileBasedTileSource.getSource(String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.HEREWeGoTileSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.HEREWeGoTileSource(Context)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.retrieveDomainOverride(Context)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.setDomainOverride(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.HEREWeGoTileSource(String,String,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.HEREWeGoTileSource(String,int,int,int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.HEREWeGoTileSource(String,int,int,int,String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.retrieveAppCode(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.retrieveMapBoxMapId(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.retrieveAppId(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.setHereWeGoMapid(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.getHerewegoMapId()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.getTileURLString(MapTile)</name>
      <ncss>15</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.getAppId()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.setAppId(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.getAppCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource.setAppCode(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.IStyledTileSource.setStyle(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.IStyledTileSource.setStyle(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.IStyledTileSource.getStyle()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.ordinal()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.name()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getTileRelativeFilenameString(MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getDrawable(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getDrawable(InputStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getMinimumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getMaximumZoomLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.ITileSource.getTileSizePixels()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.MapBoxTileSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.MapBoxTileSource(Context)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.MapBoxTileSource(String,String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.MapBoxTileSource(String,int,int,int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.MapBoxTileSource(String,int,int,int,String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.retrieveMapBoxMapId(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.retrieveAccessToken(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.setMapboxMapid(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.getMapBoxMapId()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.getTileURLString(MapTile)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.getAccessToken()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapBoxTileSource.setAccessToken(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.MapQuestTileSource(Context)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.MapQuestTileSource(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.MapQuestTileSource(String,int,int,int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.MapQuestTileSource(String,int,int,int,String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.retrieveMapBoxMapId(Context)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.retrieveAccessToken(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.setMapboxMapid(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.getMapBoxMapId()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.getTileURLString(MapTile)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.getAccessToken()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.MapQuestTileSource.setAccessToken(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase.OnlineTileSourceBase(String,int,int,int,String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase.getTileURLString(MapTile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase.getBaseUrl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.QuadTreeTileSource.QuadTreeTileSource(String,int,int,int,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.QuadTreeTileSource.getTileURLString(MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.QuadTreeTileSource.quadTree(MapTile)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.getTileSource(String)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.containsTileSource(String)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.getTileSource(int)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.getTileSources()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.addTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.OnlineTileSourceBase$1.getTileURLString(MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.TileSourceFactory.OnlineTileSourceBase$1.getTileURLString(MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.XYTileSource.XYTileSource(String,int,int,int,String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.tilesource.XYTileSource.getTileURLString(MapTile)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.CloudmadeUtil.retrieveCloudmadeKey(Context)</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.CloudmadeUtil.getCloudmadeKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.CloudmadeUtil.setCloudmadeKey(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.CloudmadeUtil.getCloudmadeToken()</name>
      <ncss>34</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.Counters.printToLogcat()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.Counters.reset()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.ManifestUtil.retrieveKey(Context,String)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleInvalidationHandler.SimpleInvalidationHandler(View)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleInvalidationHandler.handleMessage(Message)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleInvalidationHandler.destroy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleRegisterReceiver.SimpleRegisterReceiver(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleRegisterReceiver.registerReceiver(BroadcastReceiver,IntentFilter)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleRegisterReceiver.unregisterReceiver(BroadcastReceiver)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.SimpleRegisterReceiver.destroy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.StorageInfo(String,boolean,boolean,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.getDisplayName()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.getStorageList()</name>
      <ncss>43</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.getStorage()</name>
      <ncss>14</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.getStorage(Context)</name>
      <ncss>14</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.isAvailable()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.getSdCardPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.isWritable()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.isWritable(File)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StorageUtils.getAllStorageLocations()</name>
      <ncss>74</ncss>
      <ccn>32</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StreamUtils.StreamUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StreamUtils.copy(InputStream,OutputStream)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.tileprovider.util.StreamUtils.closeStream(Closeable)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.BoundingBox(double,double,double,double)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getCenter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getDiagonalLengthInMeters()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLatNorth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLatSouth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLonEast()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLonWest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLatitudeSpan()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLongitudeSpan()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getRelativePositionOfGeoPointInBoundingBoxWithLinearInterpolation(double,double,PointF)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getRelativePositionOfGeoPointInBoundingBoxWithExactGudermannInterpolation(double,double,PointF)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getGeoPointOfRelativePositionWithLinearInterpolation(float,float)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getGeoPointOfRelativePositionWithExactGudermannInterpolation(float,float)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.increaseByScale(float)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.bringToBoundingBox(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.fromGeoPoints(IGeoPoint)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.contains(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.contains(double,double)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.Parcelable.Creator$1.createFromParcel(Parcel)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.Parcelable.Creator$1.newArray(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.describeContents()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.writeToParcel(Parcel,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.readFromParcel(Parcel)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLatitudeSpanE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBox.getLongitudeSpanE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.BoundingBoxE6(int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.BoundingBoxE6(double,double,double,double)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getCenter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getDiagonalLengthInMeters()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLatNorthE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLatSouthE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLonEastE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLonWestE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLatitudeSpanE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getLongitudeSpanE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getRelativePositionOfGeoPointInBoundingBoxWithLinearInterpolation(int,int,PointF)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getRelativePositionOfGeoPointInBoundingBoxWithExactGudermannInterpolation(int,int,PointF)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getGeoPointOfRelativePositionWithLinearInterpolation(float,float)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.getGeoPointOfRelativePositionWithExactGudermannInterpolation(float,float)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.increaseByScale(float)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.bringToBoundingBox(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.fromGeoPoints(GeoPoint)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.contains(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.contains(int,int)</name>
      <ncss>9</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.Parcelable.Creator$1.createFromParcel(Parcel)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.Parcelable.Creator$1.newArray(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.describeContents()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.writeToParcel(Parcel,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundingBoxE6.readFromParcel(Parcel)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFFile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFFile(String,File)</name>
      <ncss>137</ncss>
      <ccn>40</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.close()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.openFiles()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.readHeader()</name>
      <ncss>29</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.getSources()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.selectSource(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.acceptAnySource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.getZoomLevels()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.getInputStream(int,int,int)</name>
      <ncss>32</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFRange.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.GEMFInputStream(String,long,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.available()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.markSupported()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.read(int[],int,int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.read()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GEMFFile.GEMFInputStream.skip(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(int,int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(double,double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(double,double,double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(Location)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(GeoPoint)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.fromDoubleString(String,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.fromInvertedDoubleString(String,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.fromIntString(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.getLongitude()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.getLatitude()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.getAltitude()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.setLatitude(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.setLongitude(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.setAltitude(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.setCoords(double,double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.clone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.toIntString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.GeoPoint(Parcel)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.describeContents()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.writeToParcel(Parcel,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.Parcelable.Creator$1.createFromParcel(Parcel)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.Parcelable.Creator$1.newArray(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.distanceTo(IGeoPoint)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.bearingTo(IGeoPoint)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.destinationPoint(double,float)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.fromCenterBetween(GeoPoint,GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.toDoubleString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.toInvertedDoubleString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.getLatitudeE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPoint.getLongitudeE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeometryMath.getBoundingBoxForRotatatedRectangle(Rect,float,Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeometryMath.getBoundingBoxForRotatatedRectangle(Rect,Point,float,Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeometryMath.getBoundingBoxForRotatatedRectangle(Rect,int,int,float,Rect)</name>
      <ncss>24</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeometryMath.Min4(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeometryMath.Max4(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.LocationUtils.LocationUtils()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.LocationUtils.getLastKnownLocation(LocationManager)</name>
      <ncss>15</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.LocationUtils.getLastKnownLocation(LocationManager,String)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.MyMath.MyMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.MyMath.gudermannInverse(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.MyMath.gudermann(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.MyMath.mod(int,int)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.NetworkLocationIgnorer.shouldIgnore(String,long)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileLooper.loop(Canvas,int,int,Rect)</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileLooper.initialiseLoop(int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileLooper.handleTile(Canvas,int,MapTile,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileLooper.finaliseLoop()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.setTileSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.getTileSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.MapSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.GroundResolution(double,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.MapScale(double,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.LatLongToPixelXY(double,double,int,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.PixelXYToLatLong(int,int,int,GeoPoint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.PixelXYToTileXY(int,int,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.TileXYToPixelXY(int,int,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.TileXYToQuadKey(int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.QuadKeyToTileXY(String,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.TileSystem.wrap(double,double,double,double)</name>
      <ncss>10</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.MapController(MapView)</name>
      <ncss>23</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.onFirstLayout(View,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomToSpan(BoundingBoxE6)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomToSpan(double,double)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomToSpan(int,int)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.animateTo(IGeoPoint)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.animateTo(int,int)</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.scrollBy(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.setCenter(IGeoPoint)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.stopPanning()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.stopAnimation(boolean)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.setZoom(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomIn()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomInFixing(int,int)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomOut()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomOutFixing(int,int)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomTo(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.zoomToFixing(int,int,int)</name>
      <ncss>34</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.onAnimationStart()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.onAnimationEnd()</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.ZoomAnimatorListener(MapController)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.onAnimationStart(Animator)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.onAnimationEnd(Animator)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.onAnimationCancel(Animator)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.onAnimationRepeat(Animator)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimatorListener.onAnimationUpdate(ValueAnimator)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimationListener.ZoomAnimationListener(MapController)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimationListener.onAnimationStart(Animation)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimationListener.onAnimationEnd(Animation)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ZoomAnimationListener.onAnimationRepeat(Animation)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.animateTo(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.animateTo(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.setCenter(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.zoomToSpan(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.zoomToSpan(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.replayCalls()</name>
      <ncss>16</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapController.ReplayController.ReplayClass.ReplayClass(ReplayType,Point,IGeoPoint)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.OnFirstLayoutListener.onFirstLayout(View,int,int,int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context,MapTileProviderBase,Handler,AttributeSet)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context,MapTileProviderBase,Handler,AttributeSet,boolean)</name>
      <ncss>29</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context,AttributeSet)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context,MapTileProviderBase)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapView(Context,MapTileProviderBase,Handler)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getController()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getOverlays()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getOverlayManager()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setOverlayManager(OverlayManager)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getTileProvider()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getScroller()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getTileRequestCompleteHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getLatitudeSpan()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getLatitudeSpanDouble()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getLongitudeSpan()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getLongitudeSpanDouble()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getBoundingBoxE6()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getBoundingBox()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getScreenRect(Rect)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getIntrinsicScreenRect(Rect)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getProjection()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setProjection(Projection)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMapCenter(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMapCenter(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMapCenter(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.isTilesScaledToDpi()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setTilesScaledToDpi(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.updateTileSizeForDensity(ITileSource)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setTileSource(ITileSource)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setZoomLevel(int)</name>
      <ncss>27</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomToBoundingBox(BoundingBoxE6)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomToBoundingBox(BoundingBox,boolean)</name>
      <ncss>14</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getZoomLevel(boolean)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getMinZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getMaxZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMinZoomLevel(Integer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMaxZoomLevel(Integer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.canZoomIn()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.canZoomOut()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomIn()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomInFixing(IGeoPoint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomInFixing(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomOut()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomOutFixing(IGeoPoint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.zoomOutFixing(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getMapCenter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMapOrientation(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getMapOrientation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.useDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setUseDataConnection(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setScrollableAreaLimit(BoundingBoxE6)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setScrollableAreaLimitDouble(BoundingBox)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getScrollableAreaLimit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.invalidateMapCoordinates(Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.invalidateMapCoordinates(int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.postInvalidateMapCoordinates(int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.invalidateMapCoordinates(int,int,int,int,boolean)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.generateDefaultLayoutParams()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.generateLayoutParams(AttributeSet)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.checkLayoutParams(ViewGroup.LayoutParams)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.generateLayoutParams(ViewGroup.LayoutParams)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onMeasure(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onLayout(boolean,int,int,int,int)</name>
      <ncss>64</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.addOnFirstLayoutListener(OnFirstLayoutListener)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.removeOnFirstLayoutListener(OnFirstLayoutListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.isLayoutOccurred()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onDetach()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onKeyDown(int,KeyEvent)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onKeyUp(int,KeyEvent)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onTrackballEvent(MotionEvent)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.dispatchTouchEvent(MotionEvent)</name>
      <ncss>29</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onTouchEvent(MotionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.rotateTouchEvent(MotionEvent)</name>
      <ncss>22</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.computeScroll()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.scrollTo(int,int)</name>
      <ncss>51</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setBackgroundColor(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.dispatchDraw(Canvas)</name>
      <ncss>18</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.onDetachedFromWindow()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.isAnimating()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getDraggableObjectAtPoint(PointInfo)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getPositionAndScale(Object,PositionAndScale)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.selectObject(Object,PointInfo)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setPositionAndScale(Object,PositionAndScale,PointInfo)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMapListener(MapListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.checkZoomButtons()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setBuiltInZoomControls(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setMultiTouchControls(boolean)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.getTileSourceFromAttributes(AttributeSet)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setFlingEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.isFlingEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onDown(MotionEvent)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onFling(MotionEvent,MotionEvent,float,float)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onLongPress(MotionEvent)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onScroll(MotionEvent,MotionEvent,float,float)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onShowPress(MotionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewGestureDetectorListener.onSingleTapUp(MotionEvent)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewDoubleClickListener.onDoubleTap(MotionEvent)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewDoubleClickListener.onDoubleTapEvent(MotionEvent)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewDoubleClickListener.onSingleTapConfirmed(MotionEvent)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewZoomListener.onZoom(boolean)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.MapViewZoomListener.onVisibilityChanged(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.LayoutParams.LayoutParams(int,int,IGeoPoint,int,int,int)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.LayoutParams.LayoutParams(Context,AttributeSet)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.LayoutParams.LayoutParams(ViewGroup.LayoutParams)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.MapView.setTileProvider(MapTileProviderBase)</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.Projection(MapView)</name>
      <ncss>15</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getBoundingBox()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getBoundingBoxE6()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getScreenRect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getIntrinsicScreenRect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getMapOrientation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.fromPixels(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.fromPixels(int,int,GeoPoint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toPixels(IGeoPoint,Point)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.adjustForDateLine(int,int,Point)</name>
      <ncss>18</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toProjectedPixels(GeoPoint,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toProjectedPixels(int,int,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toProjectedPixels(double,double,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toPixelsFromProjected(Point,Point)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toPixelsFromMercator(int,int,Point)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.toMercatorPixels(int,int,Point)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.metersToEquatorPixels(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.metersToPixels(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getNorthEast()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getSouthWest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.getInvertedScaleRotateCanvasMatrix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.unrotateAndScalePoint(int,int,Point)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.rotateAndScalePoint(int,int,Point)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.Projection.detach()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.drawing.OsmBitmapShader.OsmBitmapShader(Bitmap,TileMode,TileMode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.drawing.OsmBitmapShader.onDrawCycle(Projection)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.drawing.OsmPath.OsmPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.drawing.OsmPath.OsmPath(Path)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.drawing.OsmPath.onDrawCycle(Projection)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.ClickableIconOverlay(DataType)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.onMarkerClicked(MapView,int,IGeoPoint,DataType)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.set(int,IGeoPoint,Drawable,DataType)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.hitTest(MotionEvent,MapView)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.onMarkerLongPress(MapView,int,IGeoPoint,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.find(ClickableIconOverlay,int)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.getID()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ClickableIconOverlay.getData()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.DefaultOverlayManager(TilesOverlay)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.get(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.add(int,Overlay)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.remove(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.set(int,Overlay)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.getTilesOverlay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.setTilesOverlay(TilesOverlay)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.Iterable$1.Iterator$1.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.Iterable$1.Iterator$1.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.Iterable$1.Iterator$1.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.Iterable$1.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.overlaysReversed()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.overlays()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onDraw(Canvas,MapView)</name>
      <ncss>11</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onDetach(MapView)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onKeyDown(int,KeyEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onKeyUp(int,KeyEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onTrackballEvent(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onSnapToItem(int,int,Point,IMapView)</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onDoubleTap(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onDoubleTapEvent(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onDown(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onFling(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onLongPress(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onScroll(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onShowPress(MotionEvent,MapView)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onSingleTapUp(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.setOptionsMenusEnabled(boolean)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.DefaultOverlayManager.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>9</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.FolderOverlay(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.FolderOverlay()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.setName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.setDescription(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.getItems()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.add(Overlay)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.remove(Overlay)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.onSingleTapUp(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.closeAllInfoWindows()</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.FolderOverlay.onDetach(MapView)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider.isOptionsMenuEnabled()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IOverlayMenuProvider.setOptionsMenuEnabled(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.IconOverlay()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.IconOverlay(IGeoPoint,Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>17</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.getPosition()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.set(IGeoPoint,Drawable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.moveTo(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.IconOverlay.moveTo(IGeoPoint,MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ItemizedIconOverlay(Item,Drawable,Item,Context)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ItemizedIconOverlay(Item,Item,Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ItemizedIconOverlay(Context,Item,Item)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onDetach(MapView)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onSnapToItem(int,int,Point,IMapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.createItem(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.addItem(Item)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.addItem(int,Item)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.addItems(Item)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.removeAllItems()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.removeAllItems(boolean)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.removeItem(Item)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.removeItem(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ActiveItem$1.run(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onSingleTapUpHelper(int,Item,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ActiveItem$1.run(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.onLongPressHelper(int,Item)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.activateSelectedItems(MotionEvent,MapView,ActiveItem)</name>
      <ncss>14</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.getDrawnItemsLimit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.setDrawnItemsLimit(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.OnItemGestureListener.onItemSingleTapUp(int,T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.OnItemGestureListener.onItemLongPress(int,T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedIconOverlay.ActiveItem.run(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.createItem(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.size()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.ItemizedOverlay(Context,Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.ItemizedOverlay(Drawable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.onDetach(MapView)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.populate()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.getItem(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.onDrawItem(Canvas,Item,Point,float)</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.getDefaultMarker(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.hitTest(Item,android.graphics.drawable.Drawable,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>16</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.onTap(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.setDrawFocusedItem(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.setFocus(Item)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.getFocus()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot(Drawable,HotspotPlace)</name>
      <ncss>39</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.setOnFocusChangeListener(OnFocusChangeListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlay.OnFocusChangeListener.onFocusChanged(ItemizedOverlay,OverlayItem)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.ItemizedOverlayControlView(Context,AttributeSet)</name>
      <ncss>15</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.setItemizedOverlayControlViewListener(ItemizedOverlayControlViewListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.setNextEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.setPreviousEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.setNavToVisible(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.OnClickListener$1.onClick(View)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.OnClickListener$1.onClick(View)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.OnClickListener$1.onClick(View)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.OnClickListener$1.onClick(View)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.initViewListeners()</name>
      <ncss>17</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.ItemizedOverlayControlViewListener.onPrevious()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.ItemizedOverlayControlViewListener.onNext()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.ItemizedOverlayControlViewListener.onCenter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayControlView.ItemizedOverlayControlViewListener.onNavTo()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.ItemizedOverlayWithFocus(Context,Item,Item)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.ItemizedOverlayWithFocus(Item,Item,Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.ItemizedOverlayWithFocus(Item,Drawable,Drawable,int,Item,Context)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.calculateDrawSettings()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setDescriptionBoxPadding(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setDescriptionBoxCornerWidth(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setDescriptionTitleExtraLineHeight(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setMarkerBackgroundColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setMarkerTitleForegroundColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setMarkerDescriptionForegroundColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setFontSize(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setDescriptionMaxWidth(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setDescriptionLineHeight(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.getFocusedItem()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setFocusedItem(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.unSetFocusedItem()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setFocusedItem(Item)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.setFocusItemsOnTap(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.onSingleTapUpHelper(int,Item,MapView)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.draw(Canvas,MapView,boolean)</name>
      <ncss>64</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ItemizedOverlayWithFocus.onDetach(MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MapEventsOverlay.MapEventsOverlay(Context,MapEventsReceiver)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MapEventsOverlay.MapEventsOverlay(MapEventsReceiver)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MapEventsOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MapEventsOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MapEventsOverlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.Marker(MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.Marker(MapView,Context)</name>
      <ncss>23</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setIcon(Drawable)</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getPosition()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setPosition(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getRotation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setRotation(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setAnchor(float,float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setInfoWindowAnchor(float,float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setAlpha(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getAlpha()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setDraggable(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.isDraggable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setFlat(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.isFlat()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.remove(MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setOnMarkerClickListener(OnMarkerClickListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setOnMarkerDragListener(OnMarkerDragListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setImage(Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getImage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setInfoWindow(MarkerInfoWindow)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setPanToView(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.showInfoWindow()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.isInfoWindowShown()</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.draw(Canvas,MapView,boolean)</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.onDetach(MapView)</name>
      <ncss>20</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.cleanDefaults()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.hitTest(MotionEvent,MapView)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.moveToEventPosition(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.onLongPress(MotionEvent,MapView)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>17</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.OnMarkerClickListener.onMarkerClick(Marker,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.OnMarkerDragListener.onMarkerDrag(Marker)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.OnMarkerDragListener.onMarkerDragEnd(Marker)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.OnMarkerDragListener.onMarkerDragStart(Marker)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.onMarkerClickDefault(Marker,MapView)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getTextLabelBackgroundColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setTextLabelBackgroundColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getTextLabelForegroundColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setTextLabelForegroundColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.getTextLabelFontSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Marker.setTextLabelFontSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.MinimapOverlay(Context,Handler,MapTileProviderBase,int)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.MinimapOverlay(Context,Handler,MapTileProviderBase)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.MinimapOverlay(Context,Handler)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.setTileSource(ITileSource)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.getZoomDifference()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.setZoomDifference(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.onTileReadyToDraw(Canvas,Drawable,Rect)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.onSingleTapUp(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.onDoubleTap(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.isOptionsMenuEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.setWidth(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.setHeight(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.setPadding(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.MinimapOverlay.getPadding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.onDraw(Canvas,MapView,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.NonAcceleratedOverlay(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.NonAcceleratedOverlay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.onDraw(Canvas,Canvas,MapView,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.isUsingBackingBitmap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.onDetach(MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.NonAcceleratedOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>28</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.Overlay(Context)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.Overlay()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.setEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.getSafeMenuId()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.getSafeMenuIdSequence(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.draw(Canvas,MapView,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onDetach(MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onKeyDown(int,KeyEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onKeyUp(int,KeyEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onTrackballEvent(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onDoubleTap(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onDoubleTapEvent(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onDown(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onFling(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onLongPress(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onScroll(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onShowPress(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.onSingleTapUp(MotionEvent,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.drawAt(Canvas,Drawable,int,int,boolean,float)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Overlay.Snappable.onSnapToItem(int,int,Point,IMapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.OverlayItem(String,String,IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.OverlayItem(String,String,String,IGeoPoint)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getUid()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getTitle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getSnippet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getPoint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getMarker(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.setMarker(Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.setMarkerHotspot(HotspotPlace)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getMarkerHotspot()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.setState(Drawable,int)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getDrawable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayItem.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.get(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.size()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.add(int,Overlay)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.remove(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.set(int,Overlay)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.getTilesOverlay()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.setTilesOverlay(TilesOverlay)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.overlays()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.overlaysReversed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onDraw(Canvas,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onDetach(MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onKeyDown(int,KeyEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onKeyUp(int,KeyEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onTrackballEvent(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onSnapToItem(int,int,Point,IMapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onDoubleTap(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onDoubleTapEvent(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onDown(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onFling(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onLongPress(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onScroll(MotionEvent,MotionEvent,float,float,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onShowPress(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onSingleTapUp(MotionEvent,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.setOptionsMenusEnabled(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayManager.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.OverlayWithIW(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.OverlayWithIW()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.setTitle(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.getTitle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.setSnippet(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.getSnippet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.setSubDescription(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.getSubDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.setRelatedObject(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.getRelatedObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.setInfoWindow(InfoWindow)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.getInfoWindow()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.closeInfoWindow()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.onDestroy()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.OverlayWithIW.isInfoWindowOpen()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.PathOverlay(int,Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.PathOverlay(int,float,Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.PathOverlay(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.PathOverlay(int,float)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.setColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.setAlpha(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addGreatCircle(GeoPoint,GeoPoint)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addGreatCircle(GeoPoint,GeoPoint,int)</name>
      <ncss>18</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.getPaint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.setPaint(Paint)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.clearPath()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addPoint(IGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addPoint(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addPoints(IGeoPoint)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.addPoints(IGeoPoint)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.getNumberOfPoints()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.PathOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>41</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.LinearRing.LinearRing()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.LinearRing.getPoints()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.LinearRing.setPoints(GeoPoint)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.LinearRing.buildPathPortion(Projection)</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.Polygon(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.Polygon()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getFillColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getStrokeColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getStrokeWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getOutlinePaint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getPoints()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.isVisible()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setFillColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setStrokeColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setStrokeWidth(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setVisible(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setPoints(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.setHoles(GeoPoint)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.getHoles()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.pointsAsCircle(GeoPoint,double)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.pointsAsRect(BoundingBoxE6)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.pointsAsRect(BoundingBox)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.pointsAsRect(GeoPoint,double,double)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.draw(Canvas,MapView,boolean)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.contains(MotionEvent)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polygon.onDetach(MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.Polyline(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.Polyline()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.clearPath()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.addPoint(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.addPoint(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.getPoints()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.getNumberOfPoints()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.getColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.getPaint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.isVisible()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.isGeodesic()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setColor(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setWidth(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setVisible(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setOnClickListener(OnClickListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.addGreatCircle(GeoPoint,GeoPoint,int)</name>
      <ncss>18</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setPoints(GeoPoint)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.setGeodesic(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.precomputePoints(Projection)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.drawOld(Canvas,MapView,boolean)</name>
      <ncss>40</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.draw(Canvas,MapView,boolean)</name>
      <ncss>55</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.isCloseTo(GeoPoint,double,MapView)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.dot(Point,Point,Point)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.cross(Point,Point,Point)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.distance(Point,Point)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.linePointDist(Point,Point,Point,boolean)</name>
      <ncss>13</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.showInfoWindow(GeoPoint)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.OnClickListener.onClick(Polyline,MapView,GeoPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.onClickDefault(Polyline,MapView,GeoPoint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.Polyline.onDetach(MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.ScaleBarOverlay(MapView)</name>
      <ncss>39</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setMinZoom(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setScaleBarOffset(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setLineWidth(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setTextSize(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setUnitsOfMeasure(UnitsOfMeasure)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.getUnitsOfMeasure()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.drawLatitudeScale(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.drawLongitudeScale(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setCentred(boolean)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setAlignBottom(boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setAlignRight(boolean)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.getBarPaint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setBarPaint(Paint)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.getTextPaint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setTextPaint(Paint)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setBackgroundPaint(Paint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setEnableAdjustLength(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.setMaxLength(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>41</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.disableScaleBar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.enableScaleBar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.drawLatitudeText(Canvas,Projection)</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.drawLongitudeText(Canvas,Projection)</name>
      <ncss>23</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.rebuildBarPath(Projection)</name>
      <ncss>54</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.adjustScaleBarLength(double)</name>
      <ncss>39</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.scaleBarLengthText(int)</name>
      <ncss>27</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.ScaleBarOverlay.onDetach(MapView)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.TilesOverlay(MapTileProviderBase,Context)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setLoadingDrawable(Drawable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.onDetach(MapView)</name>
      <ncss>21</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getMinimumZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getMaximumZoomLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.useDataConnection()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setUseDataConnection(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.drawTiles(Canvas,Projection,int,int,Rect)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.TileLooper$1.initialiseLoop(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.TileLooper$1.handleTile(Canvas,int,MapTile,int,int)</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.TileLooper$1.finaliseLoop()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.onTileReadyToDraw(Canvas,Drawable,Rect)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setOptionsMenuEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.isOptionsMenuEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getLoadingBackgroundColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setLoadingBackgroundColor(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getLoadingLineColor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setLoadingLineColor(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getLoadingTile()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.clearLoadingTile()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setOvershootTileCache(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.getOvershootTileCache()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.TilesOverlay.setColorFilter(ColorFilter)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.CompassOverlay(Context,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.CompassOverlay(Context,IOrientationProvider,MapView)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.onDetach(MapView)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.invalidateCompass()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.setCompassCenter(float,float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.getOrientationProvider()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.setOrientationProvider(IOrientationProvider)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.drawCompass(Canvas,float,Rect)</name>
      <ncss>19</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.setOptionsMenuEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.isOptionsMenuEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.onOrientationChanged(float,IOrientationProvider)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.enableCompass(IOrientationProvider)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.enableCompass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.disableCompass()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.isCompassEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.getOrientation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.calculatePointOnCircle(float,float,float,float)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.drawTriangle(Canvas,float,float,float,float,Paint)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.getDisplayOrientation()</name>
      <ncss>10</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.createCompassFramePicture()</name>
      <ncss>24</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.CompassOverlay.createCompassRosePicture()</name>
      <ncss>37</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.IOrientationConsumer.onOrientationChanged(float,IOrientationProvider)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.IOrientationProvider.startOrientationProvider(IOrientationConsumer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.IOrientationProvider.stopOrientationProvider()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.IOrientationProvider.getLastKnownOrientation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.IOrientationProvider.destroy()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.InternalCompassOrientationProvider(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.startOrientationProvider(IOrientationConsumer)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.stopOrientationProvider()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.getLastKnownOrientation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.destroy()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.onAccuracyChanged(Sensor,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider.onSensorChanged(SensorEvent)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureDetector.RotationListener.onRotate(float)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureDetector.RotationGestureDetector(RotationListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureDetector.rotation(MotionEvent)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureDetector.onTouch(MotionEvent)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.RotationGestureOverlay(Context,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.RotationGestureOverlay(MapView)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onRotate(float)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onDetach(MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.isOptionsMenuEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gestures.RotationGestureOverlay.setOptionsMenuEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay.applyMarkerAttributes(Marker)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay.getLatLonGrid(Context,MapView)</name>
      <ncss>124</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay.getStartEndPointsNS(double,double,int)</name>
      <ncss>36</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay.getStartEndPointsWE(double,double,int)</name>
      <ncss>35</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay.getIncrementor(int)</name>
      <ncss>47</ncss>
      <ccn>44</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow.setResIds(Context)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow.View.OnTouchListener$1.onTouch(View,MotionEvent)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow.BasicInfoWindow(int,MapView)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow.onOpen(Object)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.BasicInfoWindow.onClose()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.InfoWindow(int,MapView)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.getMapView()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.getView()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.open(Object,GeoPoint,int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.close()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.onDetach()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.isOpen()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.closeAllInfoWindowsOn(MapView)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.getOpenedInfoWindowsOn(MapView)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.onOpen(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.InfoWindow.onClose()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.MarkerInfoWindow.MarkerInfoWindow(int,MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.MarkerInfoWindow.getMarkerReference()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.MarkerInfoWindow.onOpen(Object)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.infowindow.MarkerInfoWindow.onClose()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.DirectedLocationOverlay(Context)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.setDirectionArrow(Bitmap)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.setShowAccuracy(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.setLocation(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.getLocation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.setAccuracy(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.setBearing(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.onDetach(MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.DirectedLocationOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>20</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.GpsMyLocationProvider(Context)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.clearLocationSources()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.addLocationSource(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.getLocationSources()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.getLocationUpdateMinTime()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.setLocationUpdateMinTime(long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.getLocationUpdateMinDistance()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.setLocationUpdateMinDistance(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.startLocationProvider(IMyLocationConsumer)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.stopLocationProvider()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.getLastKnownLocation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.destroy()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.onLocationChanged(Location)</name>
      <ncss>11</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.onProviderDisabled(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.onProviderEnabled(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.onStatusChanged(String,int,Bundle)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationConsumer.onLocationChanged(Location,IMyLocationProvider)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationProvider.startLocationProvider(IMyLocationConsumer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationProvider.stopLocationProvider()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationProvider.getLastKnownLocation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.IMyLocationProvider.destroy()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.MyLocationNewOverlay(MapView)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.MyLocationNewOverlay(IMyLocationProvider,MapView)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setDirectionArrow(Bitmap,Bitmap)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onDetach(MapView)</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setDrawAccuracyEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.isDrawAccuracyEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.getMyLocationProvider()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setMyLocationProvider(IMyLocationProvider)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setPersonHotspot(float,float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.drawMyLocation(Canvas,MapView,Location)</name>
      <ncss>38</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.getMyLocationDrawingBounds(int,Location,Rect)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>5</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onSnapToItem(int,int,Point,IMapView)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setEnableAutoStop(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.getEnableAutoStop()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setOptionsMenuEnabled(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.isOptionsMenuEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onCreateOptionsMenu(Menu,int,MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onPrepareOptionsMenu(Menu,int,MapView)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onOptionsItemSelected(MenuItem,int,MapView)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.getMyLocation()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.getLastFix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableFollowLocation()</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.disableFollowLocation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.isFollowLocationEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.Runnable$1.run()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.onLocationChanged(Location,IMyLocationProvider)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setLocation(Location)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableMyLocation(IMyLocationProvider)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableMyLocation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.disableMyLocation()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.stopLocationProvider()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.isMyLocationEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.runOnFirstFix(Runnable)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setPersonIcon(Bitmap)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.SimpleLocationOverlay(Context)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.SimpleLocationOverlay(Bitmap)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.setLocation(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.getMyLocation()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.onDetach(MapView)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay.setPersonIcon(Bitmap,Point)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(double,double,double,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(Location)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(GeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(double,double,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(LabelledGeoPoint)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.getLabel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.setLabel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.clone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.LabelledGeoPoint(Parcel)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.writeToParcel(Parcel,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.Parcelable.Creator$1.createFromParcel(Parcel)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.Parcelable.Creator$1.newArray(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.LabelledPoint.LabelledPoint(Point,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.size()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.get(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.isLabelled()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.OnClickListener.onClick(PointAdapter,Integer)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.SimpleFastPointOverlay(PointAdapter,SimpleFastPointOverlayOptions)</name>
      <ncss>19</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.SimpleFastPointOverlay(PointAdapter)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.updateGrid(MapView)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.computeGrid(MapView)</name>
      <ncss>24</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.onTouchEvent(MotionEvent,MapView)</name>
      <ncss>38</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.onSingleTapConfirmed(MotionEvent,MapView)</name>
      <ncss>25</ncss>
      <ccn>12</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.setSelectedPoint(Integer)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.getSelectedPoint()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.getBoundingBox()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.setOnClickListener(OnClickListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.draw(Canvas,MapView,boolean)</name>
      <ncss>73</ncss>
      <ccn>55</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.SimpleFastPointOverlayOptions()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.getDefaultStyle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setPointStyle(Paint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setSelectedPointStyle(Paint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setRadius(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setSelectedRadius(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setIsClickable(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setCellSize(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setAlgorithm(RenderingAlgorithm)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setSymbol(Shape)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setTextStyle(Paint)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setMinZoomShowLabels(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setMaxNShownLabels(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.setLabelPolicy(LabelPolicy)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.SimplePointTheme(IGeoPoint,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.get(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.isLabelled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.iterator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.Mercator()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.projectGeoPoint(IGeoPoint,int,Point)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.projectGeoPoint(double,double,int,Point)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.getBoundingBoxFromCoords(double,double,double,double,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.getBoundingBoxFromPointInMapTile(Point,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.projectPoint(int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.tile2lon(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.Mercator.tile2lat(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.MyMath.MyMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.MyMath.getNextSquareNumberAbove(float)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.PathProjection.toPixels(Projection,GeoPoint,Path)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.views.util.PathProjection.toPixels(Projection,GeoPoint,Path,boolean)</name>
      <ncss>34</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundBoxTest.testBoundingBox()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundBoxTest.testBoundingBoxMax()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.BoundBoxTest.testBoundingBoxAllNegs()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_distanceTo_zero()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_distanceTo_one()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_distanceTo_one_degree()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_bearingTo_north()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_bearingTo_east()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_bearingTo_south()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_bearingTo_west()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_bearingTo_north_west()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_destinationPoint_north_west_here()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromString_withoutAltitude()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromString_withAltitude()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromDoubleString_withoutAltitude()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromDoubleString_withAltitude()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromInvertedDoubleString_withoutAltitude()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.osmdroid.util.GeoPointTest.test_toFromInvertedDoubleString_withAltitude()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>5.33</ncss>
      <ccn>2.21</ccn>
      <javadocs>0.30</javadocs>
    </function_averages>
    <ncss>10,825.00</ncss>
  </functions>
</javancss>

